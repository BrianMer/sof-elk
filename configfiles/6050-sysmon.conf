# SOF-ELKÂ® Configuration File
# Author: Phil Hagen
# Email: phil@lewestech.com
#
# (C)2023 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for sysmon messages
# It was initially developed to support logs from sysmon for linux via syslog

# <Event><System><Provider Name="Linux-Sysmon" Guid="{ff032593-a8d3-4f13-b0d6-01fc615a0f97}"/><EventID>3</EventID><Version>5</Version><Level>4</Level><Task>3</Task><Opcode>0</Opcode><Keywords>0x8000000000000000</Keywords><TimeCreated SystemTime="2023-03-17T07:00:24.306312000Z"/><EventRecordID>28253492</EventRecordID><Correlation/><Execution ProcessID="834" ThreadID="834"/><Channel>Linux-Sysmon/Operational</Channel><Computer>starkskunk5</Computer><Security UserId="0"/></System><EventData><Data Name="RuleName">-</Data><Data Name="UtcTime">2023-03-17 07:00:24.309</Data><Data Name="ProcessGuid">{ec2ee89f-0ff1-6414-6d55-7c13e9550000}</Data><Data Name="ProcessId">785807</Data><Data Name="Image">/usr/usr/sbin/logrotate</Data><Data Name="User">root</Data><Data Name="Protocol">udp</Data><Data Name="Initiated">true</Data><Data Name="SourceIsIpv6">false</Data><Data Name="SourceIp">10.130.9.15</Data><Data Name="SourceHostname">-</Data><Data Name="SourcePort">59672</Data><Data Name="SourcePortName">-</Data><Data Name="DestinationIsIpv6">false</Data><Data Name="DestinationIp">10.130.8.2</Data><Data Name="DestinationHostname">-</Data><Data Name="DestinationPort">53</Data><Data Name="DestinationPortName">-</Data></EventData></Event>

filter {
  if [type] == "syslog" and [syslog_program] == "sysmon" {

    # parse the xml into the "raw" object
    xml {
      source => "message"
      target => "raw"
      force_content => false
      force_array => false
    }

    if [raw][EventData][Data] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][EventData][Data]"
          "destination_field" => "[sysmon][eventdata]"
          "key_field" => "Name"
          "val_field" => "content"
        }
      }
      mutate {
        remove_field => [ "[raw][EventData][Data]" ]
      }
    }

    mutate {
      rename => {
        "[raw][System]" => "[sysmon][system]"
      }
    }

    # strip { and } from GUID fields
    # replace timestamp w/ millisecond precision
    # cast integers and booleans?

    mutate {
      rename => {
        "[sysmon][eventdata][SourceIp]" => "[sysmon][event_data][source_ip]"
        "[sysmon][eventdata][SourcePort]" => "[sysmon][event_data][source_port]"
        "[sysmon][eventdata][DestinationIp]" => "[sysmon][event_data][destination_ip]"
        "[sysmon][eventdata][DestinationPort]" => "[sysmon][event_data][destination_port]"
        "[sysmon][eventdata][ProcessGuid]" => "[sysmon][event_data][process_guid]"
      }
    }

    mutate {
      add_tag => [ "parse_done" ]
    }

  }
}
