# SOF-ELKÂ® Configuration File
# (C)2023 Lewes Technology Consulting, LLC
#
# This file contains filters, transforms, and enrichments for AWS Route53 and PassiveDNS messages

filter {
  # json-formatted logs already pre-processed into [raw]
  if [type] == "archive-passivedns" and [raw] {

    if [raw][answers] and [raw][answers][0] {
      split {
        field => "[raw][answers]"
      }

    } else {
      mutate {
        add_tag => [ "no_response_data" ]
      }
    }

    date {
      match => [ "[raw][query_timestamp]", "ISO8601" ]
    }

    mutate {
      rename => {
        "[raw][account_id]" => "account_id"
        "[raw][region]" => "region"
        "[raw][vpc_id]" => "vpc_id"
        "[raw][query_name]" => "query"
        "[raw][query_type]" => "query_type"
        "[raw][query_class]" => "query_class"
        "[raw][rcode]" => "response_code"
        "[raw][answers][Rdata]" => "answer"
        "[raw][answers][Type]" => "response_type"
        "[raw][answers][Class]" => "response_class"
        "[raw][srcaddr]" => "source_ip"
        "[raw][srcport]" => "source_port"
        "[raw][transport]" => "aprotocol"
        "[raw][srcids][instance]" => "source_instance"
        "[raw][srcids][resolver_endpoint]" => "resolver_instance"
        "[raw][resolver_network_interface]" => "resolver_network_interface"
      }
      lowercase => [ "aprotocol" ]
    }
    mutate {
      add_field => {
        "syslog_program" => "route53"
        "syslog_hostname" => "0.0.0.0"
      }
      remove_field => [ "raw" ]
    }

  # passivedns records
  } else if [type] == "archive-passivedns" or (([type] == "syslog") and [syslog_program] == "passivedns") {
    grok {
      patterns_dir => [ "/usr/local/sof-elk/grok-patterns" ]
      match => [ "message", "%{UNIX_MSEC:unix_timestamp}[0-9]*\|\|%{IP:source_ip}\|\|%{IP:destination_ip}\|\|%{WORD:response_class}\|\|%{PDNS_IPORHOST:query}\|\|%{WORD:query_type}\|\|%{PDNS_ANSWER:answer}\|\|%{INT:ttl}\|\|%{INT:cachehits}" ]
      add_tag => [ "got_passivedns" ]
      tag_on_failure => [ "_gpfail", "fail_sl11" ]
    }
  }

  if [type] == "archive-passivedns" and "got_passivedns" in [tags] {
    mutate {
      add_field => {
        "syslog_program" => "passivedns"
        "syslog_hostname" => "0.0.0.0"
      }
    }
  }
  if [type] == "archive-passivedns" or (([type] == "syslog") and [syslog_program] == "passivedns") and "got_passivedns" in [tags] {
    mutate {
      # remove trailing dots for both queries and answers
      gsub => [ "query", "\.$", "" ]
      gsub => [ "answer", "\.$", "" ]

      # remove the decimal point in the timestamp, so instead of sec.msec, we have msec
      gsub => [ "unix_timestamp", "\.", "" ]
    }

    date {
      match => [ "unix_timestamp", "UNIX_MS" ]
    }

    mutate {
      remove_field => [ "unix_timestamp" ]
      add_tag => [ "parse_done" ]
    }

    if [source_ip] and [query] and [answer] {
      mutate {
        replace => { "message" => "DNS: %{source_ip} (%{query} -> %{answer})" }
      }
    } else if [source_ip] and [query] {
      mutate {
        replace => { "message" => "DNS: %{source_ip} (%{query} -> No response)"}
      }
    }

    if [type] == "archive-passivedns" {
      if [logsource] {
        mutate {
          add_field => { "path" => "PassiveDNS log from %{logsource}" }
        }
      } else if "filebeat" in [tags] {
        mutate {
          add_field => { "path" => "filebeat: %{[host][name]}:%{[log][file][path]}" }
        }
      } else {
        mutate {
          add_field => { "path" => "unknown source" }
        }
      }
    }

    if [answer] and [querytype] != "CNAME" {
      grok {
        match => [ "answer", "^%{IP:answer_ip}$" ]
      }
    }
  }
}
