# SOF-ELKÂ® Configuration File
# (C)2023 Lewes Technology Consulting, LLC
#
# This file contains transforms and enrichments to be applied in postprocessing

filter {
  mutate {
    convert => {
      "[source][port]" => "integer"
      "[destination][port]" => "integer"
      "[client][port]" => "integer"
      "[remote][port]" => "integer"
      "[backend][port]" => "integer"
      "[ftp_data_destination][port]" => "integer"
    }
  }

### why not use merge?
# from ip processing:
# mutate { merge => { "ips" => "[source][ip]" } }
# would be like this here... cleaner:
# mutate { merge => { "ports" => "[source][port]" } }

  if [source][port] {
    mutate {
      add_field => {
        "ports" => [ "%{[source][port]}" ]
      }
    }
  }

  if [destination][port] {
    mutate {
      add_field => {
        "ports" => [ "%{[destination][port]}" ]
      }
    }
  }

  if [client][port] {
    mutate {
      add_field => {
        "ports" => [ "%{[client][port]}" ]
      }
    }
  }

  if [remote][port] {
    mutate {
      add_field => {
        "ports" => [ "%{[remote][port]}" ]
      }
    }
  }

  if [backend][port] {
    mutate {
      add_field => {
        "ports" => [ "%{[backend][port]}" ]
      }
    }
  }

  if [ftp_data_destination][port] {
    mutate {
      add_field => {
        "ports" => [ "%{[ftp_data_destination][port]}" ]
      }
    }
  }

  # de-duplicate the [ports] array
  ruby {
    code => '
      a = event.get("ports")
      if a.is_a? Array
        event.set("ports", a.uniq)
      end'
  }

}
