# SOF-ELKÂ® Configuration File
# (C)2023 Lewes Technology Consulting, LLC
#
# This file contains transforms and enrichments to be applied in postprocessing

filter {
  if [source][ip] {
    if [source][ip] == "-" {
      mutate { replace => { "[source][ip]" => "0.0.0.0" } }
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[source][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[source][ip]"
    }
    mutate { merge => { "ips" => "[source][ip]" } }
    # cidr {
    #   address => [ "%{[source][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[source][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[source][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[source][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  # generally just for netflow, which sets source_as to 0 on a non-AS-aware exporter
  if [source][as][number] and [source_as] == 0 {
    mutate { replace => { "source_as" => "%{[source][as][number]}" } }
    mutate { gsub => [ "source_as", "^AS", "" ] }
    mutate { convert => { "source_as" => "integer" } }
  }

  if [destination][ip] {
    if [destination][ip] == "-" { mutate { replace => { "[destination][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[destination][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[destination][ip]"
    }
    mutate { merge => { "ips" => "[destination][ip]" } }
    # cidr {
    #   address => [ "%{[destination][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[destination][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[destination][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[destination][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  # generally just for netflow, which sets destination_as to 0 on a non-AS-aware exporter
  if [destination][as][number] and [destination_as] == 0 {
    mutate { replace => { "destination_as" => "%{[destination][as][number]}" } }
    mutate { gsub => [ "destination_as", "^AS", "" ] }
    mutate { convert => { "destination_as" => "integer" } }
  }

  if [answer][ip] {
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[answer][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[answer][ip]"
    }
    mutate { merge => { "ips" => "[answer][ip]" } }
    # cidr {
    #   address => [ "%{[answer][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[answer][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[answer][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[answer][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [client][ip] {
    if [client][ip] == "-" { mutate { replace => { "[client][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[client][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[client][ip]"
    }
    mutate { merge => { "ips" => "[client][ip]" } }
    # cidr {
    #   address => [ "%{[client][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[client][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[client][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[client][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [remote][ip] {
    if [remote][ip] == "-" { mutate { replace => { "[remote][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[remote][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[remote][ip]"
    }
    mutate { merge => { "ips" => "[remote][ip]" } }
    # cidr {
    #   address => [ "%{[remote][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[remote][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[remote][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[remote][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [backend][ip] {
    if [backend][ip] == "-" { mutate { replace => { "[backend][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[backend][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[backend][ip]"
    }
    mutate { merge => { "ips" => "[backend][ip]" } }
    # cidr {
    #   address => [ "%{[backend][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[backend][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[backend][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[backend][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [xff][ip] {
    if [xff][ip] == "-" { mutate { replace => { "[xff][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[xff][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[xff][ip]"
    }
    mutate { merge => { "ips" => "[xff][ip]" } }
    # cidr {
    #   address => [ "%{[xff][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[xff][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[xff][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[xff][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [ftp_data_source][ip] {
    if [ftp_data_source][ip] == "-" { mutate { replace => { "[ftp_data_source][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[ftp_data_source][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[ftp_data_source][ip]"
    }
    mutate { merge => { "ips" => "[ftp_data_source][ip]" } }
    # cidr {
    #   address => [ "%{[ftp_data_source][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[ftp_data_source][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[ftp_data_source][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[ftp_data_source][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [ftp_data_destination][ip] {
    if [ftp_data_destination][ip] == "-" { mutate { replace => { "[ftp_data_destination][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[ftp_data_destination][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[ftp_data_destination][ip]"
    }
    mutate { merge => { "ips" => "[ftp_data_destination][ip]" } }
    # cidr {
    #   address => [ "%{[ftp_data_destination][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[ftp_data_destination][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[ftp_data_destination][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[ftp_data_destination][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [original_source][ip] {
    if [original_source][ip] == "-" { mutate { replace => { "[original_source][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[original_source][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[original_source][ip]"
    }
    mutate { merge => { "ips" => "[original_source][ip]" } }
    # cidr {
    #   address => [ "%{[original_source][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[original_source][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[original_source][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[original_source][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [original_destination][ip] {
    if [original_destination][ip] == "-" { mutate { replace => { "[original_destination][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[original_destination][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[original_destination][ip]"
    }
    mutate { merge => { "ips" => "[original_destination][ip]" } }
    # cidr {
    #   address => [ "%{[original_destination][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[original_destination][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[original_destination][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[original_destination][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  if [dhcp][ip] {
    if [dhcp][ip] == "-" { mutate { replace => { "[dhcp][ip]" => "0.0.0.0" } } }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-ASN.mmdb"
      default_database_type => "ASN"
      source => "[dhcp][ip]"
    }
    geoip {
      database => "/usr/local/share/GeoIP/GeoLite2-City.mmdb"
      source => "[dhcp][ip]"
    }
    mutate { merge => { "ips" => "[dhcp][ip]" } }
    # cidr {
    #   address => [ "%{[dhcp][ip]}" ]
    #   network => [ "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16", "fc00::/7" ]
    #   add_tag => [ "netblock_private", "netblock_rfc1918" ]
    # }
    # cidr {
    #   address => [ "%{[dhcp][ip]}" ]
    #   network => [ "169.254.0.0/16", "fe80::/10" ]
    #   add_tag => [ "netblock_linklocal" ]
    # }
    # cidr {
    #   address => [ "%{[dhcp][ip]}" ]
    #   network => [ "224.0.0.0/4", "ff00::/8" ]
    #   add_tag => [ "netblock_multicast" ]
    # }
    # cidr {
    #   address => [ "%{[dhcp][ip]}" ]
    #   network => [ "127.0.0.0/8", "::1/128" ]
    #   add_tag => [ "netblock_loopback" ]
    # }
  }

  # de-duplicate the [ips] array
  # this should probably go away with ECS
  ruby {
    code => '
      a = event.get("ips")
      if a.is_a? Array
        event.set("ips", a.uniq)
      end'
  }
}
